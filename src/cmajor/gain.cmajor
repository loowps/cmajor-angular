graph Gain   [[ main ]]
{
    input stream float<2> in;
    output stream float<2> out;

    input event float32 gainParam  [[ name: "Gain", min: 0, max: 1, init:  0, step: 0.01 ]];

    node gainToDb = GainToDb;
    node gain = std::levels::SmoothedGain (float<2>, 0.02f);

    connection {
        in -> gain.in;
        gainParam -> gainToDb.gain;
        gainToDb.volume -> gain.volume;
        gain.out -> out;
    }
}

processor GainToDb 
{
    input event float32 gain;
    output event float32 volume;

    event gain(float32 f) {
        volume <- std::levels::gainTodB (f);
    }
}
